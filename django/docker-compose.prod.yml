version: '3'

services:
  web:
    image: traefik:latest
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --accesslog.filepath=/logs/access.log
      - --api.dashboard=true
      - --api.insecure=true
    labels:
      - traefik.enable=false

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        PYTHON_VERSION: '3.10'
    environment:
      - POSTGRES_DBNAME=app
      - POSTGRES_USERNAME=app
      - POSTGRES_PASSWORD=app
      - POSTGRES_HOST=db
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - app-static:/app/static
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.entrypoints=web
      - traefik.http.routers.app.rule=HostRegexp(`localhost`)
      - traefik.http.routers.app.service=app
      - traefik.http.services.app.loadbalancer.server.port=8000

  staticfiles:
    image: nginx:latest
    volumes:
      - app-static:/usr/share/nginx/html/static
    restart: unless-stopped
    depends_on:
      - app
    labels:
      - traefik.enable=true
      - traefik.http.routers.static.entrypoints=web
      - traefik.http.routers.static.rule=HostRegexp(`localhost`) && PathPrefix(`/static`)
      - traefik.http.routers.static.service=static
      - traefik.http.services.static.loadbalancer.server.port=80
  
  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

volumes:
  app-static:
  db-data: